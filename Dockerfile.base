FROM hgrasland/root-tests:6.30.02-cxx17

# Install some useful tools for Acts development
RUN zypper modifyrepo --enable repo-debug                                      \
    && zypper install -y clang perf gdb glibc-debuginfo libgcc_s1-debuginfo    \
                         libstdc++6-debuginfo time tmux                        \
    && zypper clean -a

# This is the variant of the Acts package that we are going to build
ENV ACTS_SPACK_SPEC="acts@main build_type=RelWithDebInfo -autodiff +benchmarks \
                               -cuda +dd4hep +examples +fatras +fatras_geant4  \
                               +geant4 +hepmc3 +identification                 \
                               +integration_tests                              \
                               log_failure_threshold=WARNING +json +legacy     \
                               +pythia8 +tgeo +unit_tests                      \
                         ^ boost -atomic -chrono cxxstd=17 -date_time          \
                                 -exception +filesystem -graph -iostreams      \
                                 -locale -log -math +multithreaded             \
                                 +program_options -random -regex               \
                                 -serialization +shared -signals -system +test \
                                 -thread -timer -wave                          \
                         ^ dd4hep -ddalign -ddcad -ddcond -dddigi -ddeve       \
                           -edm4hep -utilityapps                               \
                         ^ ${ROOT_SPACK_SPEC}"

# Install the Acts dependencies in preparation for the Acts build
#
# There are several reasons to install Acts dependencies separately:
# - It's needed for the dependencies to be made part of the active spack
#   environment, and thus to be available via e.g. `spack location`
# - If the Acts dev build itself fails, the dependency build is still there,
#   without a need for dirty docker commit tricks.
# - It makes the dependency build less verbose
# - It allows us to use different levels of concurrency for deps and Acts itself
#
RUN spack install --add --only dependencies ${ACTS_SPACK_SPEC}                 \
    && spack clean -a

# Set up an Acts development build environment
RUN mkdir /mnt/acts
COPY acts-build-worker.sh /root
WORKDIR /mnt/acts

# Cache the build environment so that the user does not need to run the slow
# "spack build-env $ACTS_SPACK_SPEC -- <something>" command over and over again.
RUN spack build-env --dump ~/acts-build-env.sh $ACTS_SPACK_SPEC --

RUN echo "Base system image built, see build.sh for next steps"